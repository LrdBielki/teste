{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"198wVXCdUKMwYg5HxzedxrG6UZ1fs1b-Z","timestamp":1715782559497},{"file_id":"1OuWV80bTYvsB8L0IW-azIgHi_Ge17MKj","timestamp":1715265580468},{"file_id":"1LUGi6ohZx280C1L2LBPUTs8Je_DUJOyU","timestamp":1712952842446}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":53,"metadata":{"id":"aZSvH3BHONwm","colab":{"base_uri":"https://localhost:8080/"},"outputId":"62381b25-36a2-4403-ecc0-6f31f9db1273","executionInfo":{"status":"ok","timestamp":1716395366637,"user_tz":180,"elapsed":11797,"user":{"displayName":"Pedro Silva","userId":"05634475673805760714"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Opções de tranformações: \n","0: sair do programa\n","1:Rotação\n","2:Cisalhamento\n","3:Compressão\n","Escolha uma opção: 2\n","Você escolheu cisalhamento\n","Digite o coeficiente de cisalhamento em x: 2\n","Digite o coeficiente de cisalhamento em y: 2\n","Digite x1: 2\n","Digite y1: 2\n","Digite x2: 2\n","Digite y2: 2\n","Digite x3: 2\n","Digite y3: 2\n","Digite x4: 2\n","Digite y4: 2\n","Os pontos do quadrilátero escolhidos foram ((2.0, 2.0), (2.0, 2.0), (2.0, 2.0), (2.0, 2.0)),o tipo de transformação escolhida foi o(a) Cisalhamento e os parâmetros escolhidos foram (2, 2)\n","Opções de tranformações: \n","0: sair do programa\n","1:Rotação\n","2:Cisalhamento\n","3:Compressão\n","Escolha uma opção: 0\n","Programa encerrado\n","Opções: [2.0]\n","Resultados: [(2, 2)]\n","Pontos: ((2.0, 2.0), (2.0, 2.0), (2.0, 2.0), (2.0, 2.0))\n"]}],"source":["# Definimos uma função para pedir os pontos no plano cartesiano\n","def pedir_pontos():\n","    x1 = float(input('Digite x1: '))\n","    y1 = float(input('Digite y1: '))\n","    x2 = float(input('Digite x2: '))\n","    y2 = float(input('Digite y2: '))\n","    x3 = float(input('Digite x3: '))\n","    y3 = float(input('Digite y3: '))\n","    x4 = float(input('Digite x4: '))\n","    y4 = float(input('Digite y4: '))\n","    return x1, y1, x2, y2, x3, y3, x4, y4\n","\n","#Primeiro reunimos as coordenadas de cada ponto e designamos para cada ponto do quadrilátero.\n","# Depois juntamos todos os pontos na variavel 'pontos' para retornar 'pontos'.\n","def pontos_quad(x1,y1, x2, y2, x3, y3, x4, y4):\n","  p1=(x1,y1)\n","  p2=(x2,y2)\n","  p3=(x3,y3)\n","  p4=(x4,y4)\n","  pontos=p1,p2,p3,p4\n","  return pontos\n","# Fizemos um menu de opções, para o usuário escolher o tipo de transformação e se o usuario quer encerrar o programa\n","def opcoes_transformacao():\n","  print('Opções de tranformações: ')\n","  print('0: sair do programa')\n","  print('1:Rotação')\n","  print('2:Cisalhamento')\n","  print('3:Compressão')\n","\n","#Funçao que pede a escolha do usuário e os parâmetros para cada tranformação\n","def tipo_transformacao(opcao):\n","\n","  if opcao == 1:\n","    print('Você escolheu Rotação.')\n","    ang=float(input('Digite o valor do ângulo: '))\n","    while ang==0:\n","      ang=float(input('Digite o valor do ângulo: '))\n","\n","    resultado = ang\n","  elif opcao==2:\n","    print('Você escolheu cisalhamento')\n","    cix=int(input('Digite o coeficiente de cisalhamento em x: '))\n","    ciy=int(input('Digite o coeficiente de cisalhamento em y: '))\n","    while cix==0 and ciy==0:\n","      cix=int(input('Digite o coeficiente de cisalhamento em x: '))\n","      ciy=int(input('Digite o coeficiente de cisalhamento em y: '))\n","    resultado= cix,ciy\n","  elif opcao==3:\n","    print('Você escolheu compressão')\n","    cox=int(input('Digite o coeficiente de compressão em x: '))\n","    coy=int(input('Digite o coeficiente de compressão em y: '))\n","    while cox==1 and coy==1:\n","      cox=int(input('Digite o coeficiente de compressão em x: '))\n","      coy=int(input('Digite o coeficiente de compressão em y: '))\n","    resultado=cox,coy\n","  elif opcao==0:\n","    resultado = print('programa encerrado')\n","\n","  else:\n","    resultado = print('Opção inválida')\n","\n","  return opcao, resultado\n","#Função para mostrar qual o tipo de transformação da opção do usuário\n","def mostrar_result(opcao):\n","  if opcao==1:\n","    return 'Rotação'\n","  elif opcao==2:\n","    return 'Cisalhamento'\n","  elif opcao==3:\n","    return 'Compressão'\n","  elif opcao>3:\n","    return 'Opção inválida'\n","  # elif opcao==0:\n","  #   return 'programa encerrado'\n","  else:\n","    return None\n","#Função para dizer quais foram as escolhas do usuário\n","def print_resultados(opcao, resultado,pontos):\n","  print(f'Os pontos do quadrilátero escolhidos foram {pontos},o tipo de transformação escolhida foi o(a) {mostrar_result(opcao)} e os parâmetros escolhidos foram {resultado}')\n","#Fizemos uma função, para caso o usuário escolher uma opção que nao existe, venha mostrar uma mensagem: 'Você escolheu uma opção inválida'\n","def opc_invalida(opcao, resultado,pontos):\n","    if opcao == 1 or 2 or 3:\n","        print_resultados(opcao, resultado,pontos)\n","    else:\n","        print('Você escolheu uma opção inválida')\n","    return opcao, resultado, pontos,\n","\n","\n","# def execusao():\n","#   opcao=[]\n","#   parametro=[]\n","#   pontos=()\n","#   opcao=None\n","#   while opcao!=0:\n","#      opcoes_transformacao()\n","#      opcao_str = input('Escolha uma opção: ')\n","#      opcao = float(opcao_str)\n","#      if opcao==0:\n","#       print('Programa encerrado')\n","#       break\n","#      elif opcao in [1, 2, 3]:\n","#       resultado=None\n","#       if opcao in [1, 2, 3]:\n","#        opcao,resultado=tipo_transformacao(opcao)\n","#        x1, y1, x2, y2, x3, y3, x4, y4 = pedir_pontos()\n","#        #opcao.append(opcao)\n","#        #parametro.append(resultado)\n","#        pontos = pontos_quad(x1, y1, x2, y2, x3, y3, x4, y4)\n","\n","#        opc_invalida(opcao, resultado,pontos)\n","#       else:\n","#        print('Você escolheu uma opcão inválida')\n","#   else:\n","#     print('Você escolheu uma opcão inválida')\n","def execusao():\n","    opcoes = []  # Lista para armazenar as opções\n","    resultados = []  # Lista para armazenar os resultados\n","    pontos=()\n","    opcao = None\n","    while opcao != 0:\n","        opcoes_transformacao()\n","        opcao_str = input('Escolha uma opção: ')\n","        opcao = float(opcao_str)\n","        if opcao == 0:\n","            print('Programa encerrado')\n","            break\n","        elif opcao in [1, 2, 3]:\n","            resultado = None\n","            if opcao in [1, 2, 3]:\n","                opcao, resultado = tipo_transformacao(opcao)\n","                x1, y1, x2, y2, x3, y3, x4, y4 = pedir_pontos()\n","                pontos = pontos_quad(x1, y1, x2, y2, x3, y3, x4, y4)\n","\n","                # Adiciona a opção à lista de opções\n","                opcoes.append(opcao)\n","                # Adiciona o resultado à lista de resultados\n","                resultados.append(resultado)\n","\n","                opc_invalida(opcao, resultado, pontos)\n","            else:\n","                print('Você escolheu uma opção inválida')\n","    else:\n","        print('Você escolheu uma opção inválida')\n","    return opcoes, resultados, pontos\n","\n","opcoes, resultados, pontos = execusao()\n","print(\"Opções:\", opcoes)\n","print(\"Resultados:\", resultados)\n","print(\"Pontos:\", pontos)\n"]},{"cell_type":"code","source":[],"metadata":{"id":"-H0iVjt_yIne"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["opcao_transformacao()\n","opcao = float(input('Escolha uma opção: '))\n","def execusao():\n","  if opcao==1 or 2 or 3:\n","   while opcao==1 or 2 or 3:\n","    opcao_transformacao()\n","    tipo_transformacao()\n","    opcao_invalida()\n","  elif opcao>1 or 2 or 3:\n","    opcao = float(input('Escolha uma opção: '))\n","  elif: opcao == 0:\n","    opcao_invalida()\n","\n","\n","\n","\n","\n"],"metadata":{"id":"9dfEyGCk9g_-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1715264338660,"user_tz":180,"elapsed":2581,"user":{"displayName":"Pedro Silva","userId":"05634475673805760714"}},"outputId":"10f7c17c-ef8d-48d1-cf03-231f31602dfd"},"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["digite um valor2\n"]}]},{"cell_type":"code","source":["# Definimos uma função para pedir os pontos no plano cartesiano\n","def pedir_pontos():\n","    \"\"\"\n","    Solicita ao usuário as coordenadas dos pontos do quadrilátero e retorna esses pontos.\n","\n","    Retorna:\n","        tupla: Coordenadas dos pontos do quadrilátero (x1, y1, x2, y2, x3, y3, x4, y4).\n","    \"\"\"\n","    x1 = float(input('Digite x1: '))\n","    y1 = float(input('Digite y1: '))\n","    x2 = float(input('Digite x2: '))\n","    y2 = float(input('Digite y2: '))\n","    x3 = float(input('Digite x3: '))\n","    y3 = float(input('Digite y3: '))\n","    x4 = float(input('Digite x4: '))\n","    y4 = float(input('Digite y4: '))\n","    return x1, y1, x2, y2, x3, y3, x4, y4\n","\n","# Função que reune a coordenadas de cada ponto específico.\n","def pontos_quad(x1, y1, x2, y2, x3, y3, x4, y4):\n","    \"\"\"\n","    Combina as coordenadas dos pontos em tuplas para representar o quadrilátero.\n","\n","    Argumentos:\n","        x1 (float): Coordenada x do ponto 1.\n","        y1 (float): Coordenada y do ponto 1.\n","        x2 (float): Coordenada x do ponto 2.\n","        y2 (float): Coordenada y do ponto 2.\n","        x3 (float): Coordenada x do ponto 3.\n","        y3 (float): Coordenada y do ponto 3.\n","        x4 (float): Coordenada x do ponto 4.\n","        y4 (float): Coordenada y do ponto 4.\n","\n","    Retorna:\n","        tupla: Tupla contendo as coordenadas dos pontos do quadrilátero ((x1, y1), (x2, y2), (x3, y3), (x4, y4)).\n","    \"\"\"\n","    p1 = (x1, y1)\n","    p2 = (x2, y2)\n","    p3 = (x3, y3)\n","    p4 = (x4, y4)\n","    return p1, p2, p3, p4\n","\n","# Define um menu de opções para o usuário escolher o tipo de transformação.\n","def opcoes_transformacao():\n","    \"\"\"Apresenta as opções de transformações disponíveis.\"\"\"\n","    print('Opções de transformações: ')\n","    print('0: sair do programa')\n","    print('1: Rotação')\n","    print('2: Cisalhamento')\n","    print('3: Compressão')\n","\n","# Pede a escolha do usuário e os parâmetros para cada transformação\n","def tipo_transformacao(opcao):\n","    \"\"\"\n","    Solicita ao usuário os parâmetros para a transformação escolhida.\n","\n","    Argumentos:\n","        opcao (int): Opção escolhida pelo usuário.\n","\n","    Retorna:\n","        tupla: Tupla contendo a opção escolhida e os parâmetros correspondentes.\n","    \"\"\"\n","    if opcao == 1:\n","        print('Você escolheu Rotação.')\n","        ang = float(input('Digite o valor do ângulo: '))\n","        while ang == 0:\n","            ang = float(input('Digite o valor do ângulo: '))\n","        resultado = ang\n","    elif opcao == 2:\n","        print('Você escolheu Cisalhamento.')\n","        cix = int(input('Digite o coeficiente de cisalhamento em x: '))\n","        ciy = int(input('Digite o coeficiente de cisalhamento em y: '))\n","        while cix == 0 and ciy == 0:\n","            cix = int(input('Digite o coeficiente de cisalhamento em x: '))\n","            ciy = int(input('Digite o coeficiente de cisalhamento em y: '))\n","        resultado = cix, ciy\n","    elif opcao == 3:\n","        print('Você escolheu Compressão.')\n","        cox = int(input('Digite o coeficiente de compressão em x: '))\n","        coy = int(input('Digite o coeficiente de compressão em y: '))\n","        while cox == 1 and coy == 1:\n","            cox = int(input('Digite o coeficiente de compressão em x: '))\n","            coy = int(input('Digite o coeficiente de compressão em y: '))\n","        resultado = cox, coy\n","    elif opcao == 0:\n","        resultado = print('Programa encerrado')\n","    else:\n","        resultado = print('Opção inválida')\n","\n","    return opcao, resultado\n","\n","# Mostra o tipo de transformação escolhida.\n","def mostrar_result(opcao):\n","    \"\"\"\n","    Retorna o nome do tipo de transformação com base na opção escolhida.\n","\n","    Argumentos:\n","        opcao (int): Opção escolhida pelo usuário.\n","\n","    Retorna:\n","        str: Nome do tipo de transformação.\n","    \"\"\"\n","    if opcao == 1:\n","        return 'Rotação'\n","    elif opcao == 2:\n","        return 'Cisalhamento'\n","    elif opcao == 3:\n","        return 'Compressão'\n","    elif opcao > 3:\n","        return 'Opção inválida'\n","    else:\n","        return None\n","\n","# Imprime os resultados das escolhas do usuário\n","def print_resultados(opcao, resultado, pontos):\n","    \"\"\"\n","    Imprime os resultados das escolhas do usuário.\n","\n","    Argumentos:\n","        opcao (int): Opção escolhida pelo usuário.\n","        resultado (float ou tupla): Resultado da transformação escolhida.\n","        pontos (tupla): Coordenadas dos pontos do quadrilátero.\n","    \"\"\"\n","    print(f'Os pontos do quadrilátero escolhidos foram {pontos}, '\n","          f'o tipo de transformação escolhida foi o(a) {mostrar_result(opcao)} '\n","          f'e os parâmetros escolhidos foram {resultado}')\n","\n","# Função para definir se a opcão se encaixa nas opções do menu ou não.\n","def opc_invalida(opcao, resultado, pontos):\n","    \"\"\"\n","    Verifica se a opção escolhida pelo usuário é válida e imprime os resultados.\n","\n","    Args:\n","        opcao (int): Opção escolhida pelo usuário.\n","        resultado (float ou tupla): Resultado da transformação escolhida.\n","        pontos (tupla): Coordenadas dos pontos do quadrilátero.\n","    \"\"\"\n","    if opcao == 1 or opcao == 2 or opcao == 3:\n","        print_resultados(opcao, resultado, pontos)\n","    else:\n","        print('Você escolheu uma opção inválida')\n","\n","# Função principal para execução do programa\n","def execusao():\n","    \"\"\"\n","    Função principal para execução do programa.\n","    \"\"\"\n","    opcoes = []  # Lista para armazenar as opções escolhidas\n","    resultados = []  # Lista para armazenar os resultados das transformações\n","    pontos = ()  # Tupla para armazenar as coordenadas dos pontos do quadrilátero\n","    opcao = None\n","\n","    while opcao != 0:\n","        opcoes_transformacao()\n","        opcao_str = input('Escolha uma opção: ')\n","        opcao = float(opcao_str)\n","\n","        if opcao == 0:\n","            print('Programa encerrado')\n","            break\n","        elif opcao in [1, 2, 3]:\n","            resultado = None\n","            if opcao in [1, 2, 3]:\n","                opcao, resultado = tipo_transformacao(opcao)\n","                x1, y1, x2, y2, x3, y3, x4, y4 = pedir_pontos()\n","                pontos = pontos_quad(x1, y1, x2, y2, x3, y3, x4, y4)\n","\n","                # Adiciona a opção escolhida à lista de opções\n","                opcoes.append(opcao)\n","                # Adiciona o resultado da transformação à lista de resultados\n","                resultados.append(resultado)\n","\n","                opc_invalida(opcao, resultado, pontos)\n","        else:\n","            print('Você escolheu uma opção inválida')\n","\n","    # Retorna as listas de opções e resultados, e a tupla de pontos\n","    return opcoes, resultados, pontos\n","\n","# Chama a função execusao() e armazena os valores retornados\n","opcoes, resultados, pontos = execusao()\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9J4nPtm-9a4T","executionInfo":{"status":"ok","timestamp":1716396056790,"user_tz":180,"elapsed":2389,"user":{"displayName":"Pedro Silva","userId":"05634475673805760714"}},"outputId":"d20b9569-43fa-430a-eee0-1019b6a2ef3d"},"execution_count":56,"outputs":[{"output_type":"stream","name":"stdout","text":["Opções de transformações: \n","0: sair do programa\n","1: Rotação\n","2: Cisalhamento\n","3: Compressão\n","Escolha uma opção: 0\n","Programa encerrado\n"]}]}]}